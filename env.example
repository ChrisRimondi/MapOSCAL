# MapOSCAL Environment Variables Configuration
# Copy this file to .env and fill in your API keys

# =============================================================================
# LLM Provider API Keys
# =============================================================================

# OpenAI (Default provider)
# Get your API key from: https://platform.openai.com/api-keys
OPENAI_API_KEY=sk-your-openai-api-key-here

# Google Gemini (via OpenAI-compatible API)
# Get your API key from: https://makersuite.google.com/app/apikey
GEMINI_API_KEY=your-gemini-api-key-here



# =============================================================================
# Optional Base URL Overrides
# =============================================================================

# OpenAI (default: https://api.openai.com/v1)
# OPENAI_BASE_URL=https://api.openai.com/v1

# Gemini (default: https://generativelanguage.googleapis.com/v1beta/openai/)
# GEMINI_BASE_URL=https://generativelanguage.googleapis.com/v1beta/openai/



# =============================================================================
# Configuration Notes
# =============================================================================

# 1. Only set the API keys for the providers you plan to use
# 2. You can use different providers for different commands:
#    - analyze: Fast, cost-effective models (e.g., gpt-4o-mini)
#    - summarize: High-quality models (e.g., gpt-4, gemini-2.5-flash)
#    - generate: High-quality models for OSCAL generation
#    - evaluate: High-quality models for assessment

# 3. Example configurations in your config.yaml:
#    llm:
#      analyze:
#        provider: "openai"
#        model: "gpt-4o-mini"
#      generate:
#        provider: "gemini"
#        model: "gemini-2.5-flash"



# 5. Security: Never commit your actual .env file to version control
#    This file (env.example) is safe to commit as it contains no real keys 